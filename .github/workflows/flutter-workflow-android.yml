name: Flutter CI (Android)

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: [self-hosted, linux]
    env:
      ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
      KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      ALIAS_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      Pusher_Instance_Id: ${{ secrets.PROD_PUSHER_INSTANCE_ID }}
      GetStream_Chat_Api_Key: ${{ secrets.PROD_GETSTREAM_CHAT_API_KEY }}
      Twitter_Token: ${{ secrets.TWITTER_TOKEN }}
      Twitter_Api_key: ${{ secrets.TWITTER_API_KEY }}
      Twitter_Secret_key: ${{ secrets.TWITTER_SECRET_KEY }}
      Youtube_Token: ${{ secrets.YOUTUBE_TOKEN }}
      Youtbe_Api_Key: ${{ secrets.YOUTUBE_API_KEY }}
      MapBoxACCESS_TOKEN: ${{ secrets.MapBoxACCESS_TOKEN }}
      GCP_SERVER_API_KEY: ${{ secrets.GCP_SERVER_API_KEY }}
      SDK_REGISTRY_TOKEN: ${{ secrets.SDK_REGISTRY_TOKEN }}
      # SERVICES_JSON_BASE64: ${{ secrets.PROD_GOOGLESERVICES_ANDROID_BASE64 }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "11.x"
      - uses: subosito/flutter-action@v1
      # - run: echo -n $SERVICES_JSON_BASE64 | base64 --decode > android/app/google-services.json
      - run: echo -n "$ANDROID_KEYSTORE" | base64 --decode > android/key.jks
      - run: flutter clean
      - run: flutter pub get
      - run: flutter build appbundle --flavor prod --target lib/main_prod.dart --dart-define=Pusher_Instance_Id="$Pusher_Instance_Id" --dart-define=GetStream_Chat_Api_Key="$GetStream_Chat_Api_Key" --dart-define=Twitter_Token="$Twitter_Token" --dart-define=Twitter_Api_key="$Twitter_Api_key" --dart-define=Twitter_Secret_key="$Twitter_Secret_key" --dart-define=Youtube_Token="$Youtube_Token" --dart-define=Youtbe_Api_Key="$Youtbe_Api_Key" --dart-define=MapBoxACCESS_TOKEN=pk.eyJ1IjoicnV0dmlrMTEwIiwiYSI6ImNsOTVmOXB4bjBpZHUzbmpuZjNwdHl1aGsifQ.c_1xEjpPOtFyWdeOmUJipA --dart-define=GCP_SERVER_API_KEY="$GCP_SERVER_API_KEY"

      # - uses: actions/upload-artifact@v1
      #   with:
      #     name: app-prod-release
      #     path: build/app/outputs/flutter-apk/app-prod-release.apk
      - uses: actions/upload-artifact@v3
        with:
          name: app-prod-release.aab
          path: build/app/outputs/bundle/prodRelease/app-prod-release.aab
      - uses: actions/upload-artifact@v3
        with:
          name: mapping.txt
          path: build/app/outputs/mapping/prodRelease/mapping.txt

  deploy-play-store:
    needs: [build]
    runs-on: [self-hosted, linux]
    steps:
      - name: Publish to Play Store internal test track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT }}
          packageName: com.carverauto.chaseapp
          releaseFile: build/app/outputs/bundle/prodRelease/app-prod-release.aab
          track: internal
          # userFraction: 0.99
          status: completed
          mappingFile: build/app/outputs/mapping/prodRelease/mapping.txt
          # TODO: identify an issue when whatsnew files are included - traced back to the actual action src code
          # whatsNewDirectory: distribution_android/whatsnew
