rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    match /tokens/{document=**} {
    	allow read
      allow write
    }
    match /firehose/{document=**} {
    	allow read
      allow write
    }
    match /markers/{document=**} {
    	allow read
    }
    match /airports/{document=**} {
    	allow read
      allow write: if request.auth.token.admin == true;
    }
    match /launches/{document=**} {
    	allow read
      allow write: if request.auth.token.admin == true;
    }
    match /weather/{document=**} {
    	allow read
      allow write: if request.auth.token.admin == true;
    }
    match /adsb/{document=**} {
    	allow read
      allow write
    }
    match /webhooks/{document=**} {
    	allow read
      allow create: if request.auth.uid != null;
      allow update, delete: if request.auth.uid == uid;
    }
    match /airships/{document=**} {
    	allow read
    }
    match /chases/{document=**} {
      allow read
      allow write: if request.auth.token.admin == true;
      allow update: if (request.resource.data.diff(resource.data).affectedKeys()
        .hasOnly(['Votes']));
    }
    match /users/{uid}/{document=**} {
			allow read
      allow write, create, update, delete: if request.auth.uid == uid;
    }
    match /notifications/{id} {
      allow read: if request.auth != null;
    }
    match /interests/{id} {
      allow read: if request.auth != null;
    }
    match /animations/{id} {
      allow read: if request.auth != null;
    }
    
    
    match /customers/{uid} {
      allow read: if request.auth.uid == uid;

      match /checkout_sessions/{id} {
        allow read, write: if request.auth.uid == uid;
      }
      match /subscriptions/{id} {
        allow read: if request.auth.uid == uid;
      }
    }

    match /products/{id} {
      allow read: if true;
      
      match /prices/{id} {
        allow read: if true;
      }

      match /tax_rates/{id} {
        allow read: if true;
      }
    }
  }

  function belongsTo(userId) {
      return request.auth.uid == userId
  }

}